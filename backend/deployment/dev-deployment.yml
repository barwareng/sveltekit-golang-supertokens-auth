version: "3.9"
services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    networks:
      - acme-corp
    command:
      - "--api=true"
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=web"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=barcleodev@gmail.com"
      # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "~/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.rule=Host(`dev.traefik.acme-corp.com`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

  postgres:
    image: postgres:16
    container_name: acme-corp-postgres
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - ../.env
    volumes:
      - acme-corp-postgres:/var/lib/postgresql/data
    networks:
      - acme-corp
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:9.0
    container_name: acme-corp-supertokens
    depends_on:
      - postgres
    ports:
      - 3567:3567
    env_file:
      - ../.env
    networks:
      - acme-corp
    restart: always
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.supertokens.rule=Host(`dev.supertokens.acme-corp.com`)"
      - "traefik.http.services.supertokens.loadbalancer.server.port=3567"
      - "traefik.http.routers.supertokens.entrypoints=websecure"
      - "traefik.http.routers.supertokens.tls=true"
      - "traefik.http.routers.supertokens.tls.certresolver=myresolver"
  acme-corp-be:
    build:
      dockerfile: Dockerfile
      context: ../
    container_name: acme-corp-be
    env_file:
      - ../.env
    ports:
      - "3000:3000"
    restart: always
    networks:
      - acme-corp
    depends_on:
      - traefik
      - supertokens
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`dev.api.acme-corp.com`)"
      - "traefik.http.routers.api.middlewares=api-https"
      - "traefik.http.middlewares.api-https.redirectscheme.scheme=https"
      - "traefik.http.routers.api-secure.entrypoints=websecure"
      - "traefik.http.routers.api-secure.rule=Host(`dev.api.acme-corp.com`)"
      - "traefik.http.routers.api-secure.tls=true"
      - "traefik.http.routers.api-secure.tls.certresolver=myresolver"

volumes:
  acme-corp-postgres:
networks:
  acme-corp:
